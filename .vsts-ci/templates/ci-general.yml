steps:
  # Setup
  - powershell: |
      Write-Host "Installing PowerShell Daily..."

      # Use `AGENT_TEMPDIRECTORY` to make sure the downloaded PowerShell is cleaned up.
      $powerShellPath = Join-Path -Path $env:AGENT_TEMPDIRECTORY -ChildPath 'powershell'
      Invoke-WebRequest -Uri https://aka.ms/install-powershell.ps1 -OutFile ./install-powershell.ps1

      ./install-powershell.ps1 -Destination $powerShellPath -Daily

      # Using `prependpath` to update the PATH just for this build.
      Write-Host "##vso[task.prependpath]$powerShellPath"
    displayName: Install PowerShell Daily
  - pwsh: '$PSVersionTable'
    displayName: Display PowerShell version information
  - pwsh: Write-Host "##vso[build.updatebuildnumber]$env:BUILD_SOURCEBRANCHNAME-$env:BUILD_SOURCEVERSION-$((get-date).ToString("yyyyMMddhhmmss"))"
    displayName: Set Build Name for Non-PR
    condition: ne(variables['Build.Reason'], 'PullRequest')
  - task: PowerShell@2
    displayName: 'Set environment variables for VSTS (Phase 1)'
    inputs:
      targetType: filePath
      filePath: ./tools/releaseBuild/setVstsVariables.ps1
  - pwsh: |
      Write-Host "Cloning '$env:PSES_BRANCH' branch from '$env:PSES_FORK/PowerShellEditorServices'"
      git clone --single-branch --branch $env:PSES_BRANCH https://github.com/$env:PSES_FORK/PowerShellEditorServices.git ../PowerShellEditorServices
      Install-Module InvokeBuild -Scope CurrentUser -Force
      Install-Module PlatyPS -Scope CurrentUser -Force
  # Build
  - pwsh: Invoke-Build
  - task: PublishTestResults@2
    inputs:
      testRunner: JUnit
      testResultsFiles: '**/test-results.xml'
    condition: succeededOrFailed()
  - task: PublishBuildArtifacts@1
    inputs:
      ArtifactName: vscode-powershell
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
  # Rich Navigation
  - task: RichCodeNavIndexer@0
    # Note, for now, this is Windows only.
    condition: and(succeededOrFailed(), eq(variables['Agent.OS'], 'Windows_NT'))
    continueOnError: true
    inputs:
      serviceConnection: 'rich-nav'
      nugetServiceConnection: 'rich-nav-nuget'
      githubServiceConnection: 'PowerShell'
      languages: 'typescript,csharp'
      serviceEndpoint: 'https://prod.richnav.vsengsaas.visualstudio.com'
